services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - fastapi1
      - fastapi2
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"

  fastapi1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi1
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/rinha
      - INSTANCE_NAME=fastapi1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8001:8000"  # mapeando 8000 do container para 8001 localhost (apenas para debug)
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "125MB"


  fastapi2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi2
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/rinha
      - INSTANCE_NAME=fastapi2
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8002:8000"
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "125MB"
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"


  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    volumes:
      - rinha:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  rinha:
